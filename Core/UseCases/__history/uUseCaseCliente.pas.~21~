unit uUseCaseCliente;

interface

uses
  uiUseCaseCliente, System.SysUtils, uClientes, uResponse, uDTOCliente;

type
  TUseCaseCliente = class(TInterfacedObject, ICasoUsoCliente)
    function Cadastrar(Cliente: TCliente): TResponse;
    function Alterar(Cliente: TCliente): TResponse;
    function Deletar(ID: Integer): TResponse;
    function Consultar(Dto: DtoCliente): TResponse;
  end;

implementation

function TUseCaseCliente.Cadastrar(Cliente: TCliente): TResponse;
begin

end;

function TUseCaseCliente.Alterar(Cliente: TCliente): TResponse;
var
  Response: TResponse;
begin
  try
    Response.lSucesso := True;


  except
    on e: Exception do
    begin

    end;
  end;

  result := Response;
end;

function TUseCaseCliente.Deletar(ID: Integer): TResponse;
begin

end;

function TUseCaseCliente.Consultar(Dto: DtoCliente): TResponse;
begin

end;


end.
