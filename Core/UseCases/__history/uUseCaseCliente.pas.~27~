unit uUseCaseCliente;

interface

uses
  uiUseCaseCliente, System.SysUtils, uClientes, uResponse, uDTOCliente, uEnum;

type
  TUseCaseCliente = class(TInterfacedObject, ICasoUsoCliente)
    function Cadastrar(Cliente: TCliente): TResponse;
    function Alterar(Cliente: TCliente): TResponse;
    function Deletar(ID: Integer): TResponse;
    function Consultar(Dto: DtoCliente): TResponse;
  end;

implementation

function TUseCaseCliente.Cadastrar(Cliente: TCliente): TResponse;
var
  Response: TResponse;
begin
  try
    Response.lSucesso  := True;
    Response.iCodErro  := 0;
    Response.cMensagem := RetornarMsgRespons.CadastradoComSucesso;
    Response.lstData   := nil;

  except
    on e: Exception do
    begin

    end;
  end;

  result := Response;
end;


function TUseCaseCliente.Alterar(Cliente: TCliente): TResponse;
var
  Response: TResponse;
begin
  try
    Response.lSucesso  := True;
    Response.iCodErro  := 0;
    Response.cMensagem := RetornarMsgRespons.AlteradoComSucesso;
    Response.lstData   := nil;

  except
    on e: Exception do
    begin

    end;
  end;

  result := Response;
end;

function TUseCaseCliente.Deletar(ID: Integer): TResponse;
begin

end;

function TUseCaseCliente.Consultar(Dto: DtoCliente): TResponse;
begin

end;


end.
